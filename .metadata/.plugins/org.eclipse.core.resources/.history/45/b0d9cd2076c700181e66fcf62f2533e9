package com.jacobbalgoyen.practice;

import java.util.Arrays;

public class OneDotOne {
	
	//Using extra data structure
	public static boolean hasAllUnique(String str){
		int[] charExists = new int[26];
		for(int i = 0; i <str.length(); i++){
			if(charExists[str.charAt(i) - 'a'] == 1){
				System.out.println(str.charAt(i));
				return false;
			} else {
				charExists[str.charAt(i) - 'a'] = 1;
			}
		}
		return true;
	}
	
	//In Place algorithm
	public static boolean hasAllUniqueInPlace(String str){
		char[] sorted = quicksort(str.toCharArray(), 0, str.length() - 1);
		printCharArray(sorted);
		/*if(hasSameLettersAdj(sorted)){
			return false;
		} else {
			return true;
		}*/
		return false; //TODO just for testing
	}
	
	public static void printCharArray(char[] str){
		for(int i = 0; i < str.length; i++){
			System.out.print(str[i]);
		}
		System.out.println(" - quicksorted");
	}
	
	public static char[] quicksort(char[] str, int low, int high){
		//check for small input
		if(high - low <= 1){
			return str;
		} else {
			int wall = low;
			int pi = high;
			int pivotVal = str[pi];
			while(low < high){
				if(str[low] == pivotVal){
					wall++;
					low++;
				} else if(str[low] > pivotVal){
					low++;
				} else {
					switchWithWall(str, low, wall);
					wall++;
					low++;
				}
			}
			quicksort(str, 0, wall - 1);
			quicksort(str, wall, high);
		}
		return str;
	}

	private static void switchWithWall(char[] str, int low, int wall) {
		char temp = str[wall];
		str[wall] = str[low];
		str[low] = temp;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str1 = "asndklfejfnlw";
		String str2 = "";
		String str3 = "alksjdflkwehlinfsuekjfsahlkfhckslumfelcskemfjermusoieriejfudifudiufidfkenkfmsnsdl";
		System.out.println(hasAllUnique(str1));
		System.out.println(hasAllUnique(str2));
		System.out.println(hasAllUnique(str3));
		
		//-------------------------------------------
		
		System.out.println(hasAllUniqueInPlace(str1));
		System.out.println(hasAllUniqueInPlace(str2));
		System.out.println(hasAllUniqueInPlace(str3));
	}

}
